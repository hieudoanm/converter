{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "/editor",
  "redirects": [
    {
      "source": "/editor",
      "destination": "/editor/",
      "basePath": false,
      "internal": true,
      "statusCode": 308,
      "regex": "^/editor$"
    },
    {
      "source": "/:file((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+)/",
      "destination": "/:file",
      "internal": true,
      "missing": [
        {
          "type": "header",
          "key": "x-nextjs-data"
        }
      ],
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+))/$"
    },
    {
      "source": "/:notfile((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+)",
      "destination": "/:notfile/",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+))$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/404",
      "regex": "^/404(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/404(?:/)?$"
    },
    {
      "page": "/500",
      "regex": "^/500(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/500(?:/)?$"
    },
    {
      "page": "/calc/base",
      "regex": "^/calc/base(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calc/base(?:/)?$"
    },
    {
      "page": "/calc/crypto",
      "regex": "^/calc/crypto(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calc/crypto(?:/)?$"
    },
    {
      "page": "/calc/forex",
      "regex": "^/calc/forex(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calc/forex(?:/)?$"
    },
    {
      "page": "/calc/length",
      "regex": "^/calc/length(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calc/length(?:/)?$"
    },
    {
      "page": "/calc/roman",
      "regex": "^/calc/roman(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calc/roman(?:/)?$"
    },
    {
      "page": "/calc/weight",
      "regex": "^/calc/weight(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calc/weight(?:/)?$"
    },
    {
      "page": "/clock/pomodoro",
      "regex": "^/clock/pomodoro(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clock/pomodoro(?:/)?$"
    },
    {
      "page": "/clock/timezones",
      "regex": "^/clock/timezones(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clock/timezones(?:/)?$"
    },
    {
      "page": "/converter/code",
      "regex": "^/converter/code(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/converter/code(?:/)?$"
    },
    {
      "page": "/converter/colors",
      "regex": "^/converter/colors(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/converter/colors(?:/)?$"
    },
    {
      "page": "/converter/csv",
      "regex": "^/converter/csv(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/converter/csv(?:/)?$"
    },
    {
      "page": "/converter/json",
      "regex": "^/converter/json(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/converter/json(?:/)?$"
    },
    {
      "page": "/converter/openapi2postmanv2",
      "regex": "^/converter/openapi2postmanv2(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/converter/openapi2postmanv2(?:/)?$"
    },
    {
      "page": "/converter/strings",
      "regex": "^/converter/strings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/converter/strings(?:/)?$"
    },
    {
      "page": "/converter/yaml",
      "regex": "^/converter/yaml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/converter/yaml(?:/)?$"
    },
    {
      "page": "/editor/manifest",
      "regex": "^/editor/manifest(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/editor/manifest(?:/)?$"
    },
    {
      "page": "/editor/markup",
      "regex": "^/editor/markup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/editor/markup(?:/)?$"
    },
    {
      "page": "/editor/redact",
      "regex": "^/editor/redact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/editor/redact(?:/)?$"
    },
    {
      "page": "/generator/qrcode",
      "regex": "^/generator/qrcode(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/generator/qrcode(?:/)?$"
    },
    {
      "page": "/generator/uuid",
      "regex": "^/generator/uuid(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/generator/uuid(?:/)?$"
    },
    {
      "page": "/github/languages",
      "regex": "^/github/languages(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/github/languages(?:/)?$"
    },
    {
      "page": "/github/preview",
      "regex": "^/github/preview(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/github/preview(?:/)?$"
    },
    {
      "page": "/other/periodic-table",
      "regex": "^/other/periodic\\-table(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/other/periodic\\-table(?:/)?$"
    },
    {
      "page": "/other/status",
      "regex": "^/other/status(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/other/status(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}